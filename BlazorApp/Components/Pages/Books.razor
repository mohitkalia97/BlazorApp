@page "/books"
@inject IBookService _bookService

<PageTitle> Books </PageTitle>

<TelerikGrid Data="@GridData"
             EditMode="@GridEditMode.Inline"
             Pageable="true"
             Resizable="true"
             OnCreate="@AddHandler"
             PageSize="15" 
             Height="500px">
    <GridToolBarTemplate>
        <GridCommandButton Command="Add" Icon="@SvgIcon.Plus">Add Book</GridCommandButton>
    </GridToolBarTemplate>

    <GridColumns>
        <GridColumn Field=@nameof(Models.Book.Id) Title="ID" Editable="false" />
        <GridColumn Field=@nameof(Models.Book._title)
                    EditorType="@GridEditorType.TextArea"
                    Title="Name" />
        <GridColumn Field="@nameof(Models.Book._description)" Editable="false" Title="Description" />
        <GridColumn Field="@nameof(Models.Book._created)" Editable="false" Title="Created On" />
        <GridCommandColumn>
            <GridCommandButton Command="Save" Icon="@SvgIcon.Save" ShowInEdit="true">Update</GridCommandButton>
            <GridCommandButton Command="Edit" Icon="@SvgIcon.Pencil">Edit</GridCommandButton>
        </GridCommandColumn>
    </GridColumns>
    
</TelerikGrid>


@code {
    private List<Models.Book> GridData { get; set; }

    async Task AddHandler(GridCommandEventArgs args)
    {
        //Set default values for new items
        ((Models.Book)args.Item)._title = "New Item Name";

        //Cancel if needed
        //args.IsCancelled = true;
        System.Diagnostics.Debug.WriteLine("test");


        Models.Book book = new Models.Book
        {
                _title = "New Book",
                _description = "",
                _created = DateTime.Now
        };

        _bookService.addBook(book);

        base.OnInitialized();
    }


    protected override void OnInitialized()
    {
        GridData = _bookService.getAllBooks();

        base.OnInitialized();
    }

}